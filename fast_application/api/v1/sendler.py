import httpx
from fastapi import APIRouter
from fastapi.params import Depends
from sqlalchemy.ext.asyncio import AsyncSession

from api.crud.jwt_utils import _get_current_payload
from api.crud.user_utils import _get_current_user
from core.config import settings
from models.db_helper import db_helper
from models.user import UserBase
from shcemes.auth_sheams import SosRequest

router = APIRouter(
    tags=['Sendler'], prefix='/send', )

BOT_TOKEN = settings.bot_token
CHAT_ID = settings.chat_id

@router.post('/test')
async def send_test(payload:dict = Depends(_get_current_payload)):
    re = payload
    return {"message": "ok"}

@router.post('/sos')
async def send_sos(data: SosRequest, payload: dict = Depends(_get_current_payload),
                   session: AsyncSession = Depends(db_helper.session_getter)):
    user: UserBase = await _get_current_user(session=session, payload=payload)
    situation_text = {
        "dtp": "üöó –î–¢–ü", "conflict": "‚ö†Ô∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è",
        }.get(data.type, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è")

    text = (f"<b>SOS —Å–∏–≥–Ω–∞–ª!</b>\n"
            f"üìù –°–∏—Ç—É–∞—Ü–∏—è: {situation_text}\n"
            f"üåç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: "
            f"<a href='https://maps.google.com/?q={data.latitude},{data.longitude}'>–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É</a>\n")

    if user.username:
        text = f"üë§ @{user.username}\n" + text

    async with httpx.AsyncClient() as client:
        response = await client.post(
            f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage", json={
                "chat_id": CHAT_ID, "text": text, "parse_mode": "HTML", "disable_web_page_preview": True,
                }, )

    if response.status_code != 200:
        return {"message": "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", "error": response.text}

    return {"message": "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"}