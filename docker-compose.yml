version: '3.9'
services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    expose:
      - "8000"
    restart: always
    volumes:
      - ./fast_application:/app
    depends_on:
      pg:
        condition: service_healthy
    networks:
      - frontend

  pg:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_DB: shop
      POSTGRES_USER: shop_user
      POSTGRES_PASSWORD: shop_pass123
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGUSER=shop_user PGDATABASE=shop pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - fastapi
    restart: always
    networks:
      - frontend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot
      --email korhoff@mail.ru --agree-tos --no-eff-email
      -d motoapi.ru -d promoto64.ru --non-interactive || true"

  certbot-renew:
    image: certbot/certbot
    container_name: certbot_renew
    restart: unless-stopped
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do
        certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook 'nginx -s reload';
        sleep 12h;
      done"

volumes:
  pgdata:
networks:
  frontend:
    external: true